// <auto-generated />
using System;
using DoctorWhhoo.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoctorWhhoo.Db.Migrations
{
    [DbContext(typeof(DoctorWhoCoreDbContext))]
    [Migration("20220605210129_insertdatatotable")]
    partial class insertdatatotable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DoctorWhhoo.Db.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"), 1L, 1);

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "hazem"
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "ahmad"
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "montaser"
                        },
                        new
                        {
                            AuthorId = 4,
                            AuthorName = "mohammad"
                        },
                        new
                        {
                            AuthorId = 5,
                            AuthorName = "omar"
                        });
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Companion", b =>
                {
                    b.Property<int>("CompanionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanionId"), 1L, 1);

                    b.Property<string>("CompanionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WhoPlayed")
                        .HasColumnType("bit");

                    b.HasKey("CompanionId");

                    b.ToTable("Companions");

                    b.HasData(
                        new
                        {
                            CompanionId = 1,
                            CompanionName = "Atheer",
                            WhoPlayed = true
                        },
                        new
                        {
                            CompanionId = 2,
                            CompanionName = "Aseel",
                            WhoPlayed = false
                        },
                        new
                        {
                            CompanionId = 3,
                            CompanionName = "Hadeel",
                            WhoPlayed = true
                        },
                        new
                        {
                            CompanionId = 4,
                            CompanionName = "Majed",
                            WhoPlayed = false
                        },
                        new
                        {
                            CompanionId = 5,
                            CompanionName = "Shahd",
                            WhoPlayed = true
                        });
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("FirstEpisodeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEpisodeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            BirthDate = new DateTime(1998, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Hamza",
                            DoctorNumber = 597316748,
                            FirstEpisodeDate = new DateTime(2011, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2019, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DoctorId = 2,
                            BirthDate = new DateTime(1998, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Adel",
                            DoctorNumber = 597316748,
                            FirstEpisodeDate = new DateTime(2012, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2019, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DoctorId = 3,
                            BirthDate = new DateTime(1996, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Ibrahem",
                            DoctorNumber = 597316748,
                            FirstEpisodeDate = new DateTime(2017, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2019, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DoctorId = 4,
                            BirthDate = new DateTime(1995, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Omar",
                            DoctorNumber = 597316748,
                            FirstEpisodeDate = new DateTime(2011, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2019, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DoctorId = 5,
                            BirthDate = new DateTime(1994, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "Saef",
                            DoctorNumber = 597316748,
                            FirstEpisodeDate = new DateTime(2021, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2019, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Enemy", b =>
                {
                    b.Property<int>("EnemyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnemyId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnemyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnemyId");

                    b.ToTable("Enemys");

                    b.HasData(
                        new
                        {
                            EnemyId = 1,
                            Description = "strong working hard",
                            EnemyName = "Masa"
                        },
                        new
                        {
                            EnemyId = 2,
                            Description = "strong working hard",
                            EnemyName = "Maya"
                        },
                        new
                        {
                            EnemyId = 3,
                            Description = "strong working hard",
                            EnemyName = "Menna"
                        },
                        new
                        {
                            EnemyId = 4,
                            Description = "strong working hard",
                            EnemyName = "Marah"
                        },
                        new
                        {
                            EnemyId = 5,
                            Description = "strong working hard",
                            EnemyName = "Lana"
                        });
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Episode", b =>
                {
                    b.Property<int>("EpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EpisodeId"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EpisodeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<string>("EpisodeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriesNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EpisodeId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DoctorId");

                    b.ToTable("Episodes");

                    b.HasData(
                        new
                        {
                            EpisodeId = 1,
                            AuthorId = 4,
                            DoctorId = 1,
                            EpisodeDate = new DateTime(2011, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 10,
                            EpisodeType = "action",
                            Notes = " long episode",
                            SeriesNumber = 123,
                            Title = "go"
                        },
                        new
                        {
                            EpisodeId = 2,
                            AuthorId = 4,
                            DoctorId = 2,
                            EpisodeDate = new DateTime(2012, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 8,
                            EpisodeType = "horror",
                            Notes = " long episode",
                            SeriesNumber = 478,
                            Title = "be carefull"
                        },
                        new
                        {
                            EpisodeId = 3,
                            AuthorId = 3,
                            DoctorId = 1,
                            EpisodeDate = new DateTime(2021, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 5,
                            EpisodeType = "action",
                            Notes = " long episode",
                            SeriesNumber = 159,
                            Title = "sing"
                        },
                        new
                        {
                            EpisodeId = 4,
                            AuthorId = 2,
                            DoctorId = 3,
                            EpisodeDate = new DateTime(2019, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 4,
                            EpisodeType = "horror",
                            Notes = " long episode",
                            SeriesNumber = 867,
                            Title = "jump"
                        },
                        new
                        {
                            EpisodeId = 5,
                            AuthorId = 5,
                            DoctorId = 4,
                            EpisodeDate = new DateTime(2017, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 1,
                            EpisodeType = "horror",
                            Notes = " long episode",
                            SeriesNumber = 989,
                            Title = "listen"
                        });
                });

            modelBuilder.Entity("DoctorWhhoo.Db.EpisodeCompanion", b =>
                {
                    b.Property<int>("EpisodeCompanionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EpisodeCompanionId"), 1L, 1);

                    b.Property<int>("CompanionId")
                        .HasColumnType("int");

                    b.Property<int>("EpisodeId")
                        .HasColumnType("int");

                    b.HasKey("EpisodeCompanionId");

                    b.HasIndex("CompanionId");

                    b.HasIndex("EpisodeId");

                    b.ToTable("Epcomp");

                    b.HasData(
                        new
                        {
                            EpisodeCompanionId = 1,
                            CompanionId = 4,
                            EpisodeId = 5
                        },
                        new
                        {
                            EpisodeCompanionId = 2,
                            CompanionId = 4,
                            EpisodeId = 4
                        },
                        new
                        {
                            EpisodeCompanionId = 3,
                            CompanionId = 5,
                            EpisodeId = 2
                        },
                        new
                        {
                            EpisodeCompanionId = 4,
                            CompanionId = 1,
                            EpisodeId = 1
                        },
                        new
                        {
                            EpisodeCompanionId = 5,
                            CompanionId = 5,
                            EpisodeId = 3
                        });
                });

            modelBuilder.Entity("DoctorWhhoo.Db.EpisodeEnemy", b =>
                {
                    b.Property<int>("EpisodeEnemyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EpisodeEnemyId"), 1L, 1);

                    b.Property<int>("EnemyId")
                        .HasColumnType("int");

                    b.Property<int>("EpisodeId")
                        .HasColumnType("int");

                    b.HasKey("EpisodeEnemyId");

                    b.HasIndex("EnemyId");

                    b.HasIndex("EpisodeId");

                    b.ToTable("EpEnemy");

                    b.HasData(
                        new
                        {
                            EpisodeEnemyId = 1,
                            EnemyId = 1,
                            EpisodeId = 1
                        },
                        new
                        {
                            EpisodeEnemyId = 2,
                            EnemyId = 2,
                            EpisodeId = 2
                        },
                        new
                        {
                            EpisodeEnemyId = 3,
                            EnemyId = 5,
                            EpisodeId = 3
                        },
                        new
                        {
                            EpisodeEnemyId = 4,
                            EnemyId = 1,
                            EpisodeId = 1
                        },
                        new
                        {
                            EpisodeEnemyId = 5,
                            EnemyId = 4,
                            EpisodeId = 4
                        });
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Episode", b =>
                {
                    b.HasOne("DoctorWhhoo.Db.Author", null)
                        .WithMany("EpAuthor")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoctorWhhoo.Db.Doctor", null)
                        .WithMany("EpDoctor")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoctorWhhoo.Db.EpisodeCompanion", b =>
                {
                    b.HasOne("DoctorWhhoo.Db.Companion", null)
                        .WithMany("EpComp")
                        .HasForeignKey("CompanionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoctorWhhoo.Db.Episode", null)
                        .WithMany("EpComp")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoctorWhhoo.Db.EpisodeEnemy", b =>
                {
                    b.HasOne("DoctorWhhoo.Db.Enemy", null)
                        .WithMany("EpEnemy")
                        .HasForeignKey("EnemyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoctorWhhoo.Db.Episode", null)
                        .WithMany("EpEnemy")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Author", b =>
                {
                    b.Navigation("EpAuthor");
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Companion", b =>
                {
                    b.Navigation("EpComp");
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Doctor", b =>
                {
                    b.Navigation("EpDoctor");
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Enemy", b =>
                {
                    b.Navigation("EpEnemy");
                });

            modelBuilder.Entity("DoctorWhhoo.Db.Episode", b =>
                {
                    b.Navigation("EpComp");

                    b.Navigation("EpEnemy");
                });
#pragma warning restore 612, 618
        }
    }
}
